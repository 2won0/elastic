input {
  file {
    path => "/usr/share/logstash/data/access2.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

filter {
  grok {
    match => {
      "message" =>
       '%{TIMESTAMP_ISO8601:current_time} %{IPORHOST:clientip} %{NUMBER:res_time} %{NUMBER:status_code} %{QS:req}'
    }
  }
  elasticsearch {
    hosts => ["elasticsearch.higee.co"]
    index => "nginx-*"
    query_template => "/usr/share/logstash/code/filter/elasticsearch/example4.json"
    fields => {"@timestamp" => "previous_time"}
    remove_field => ["status_code", "path", "@timestamp", "req", "res_time", "@version", "host", "current_time"]
    aggregation_fields => {
      "this_is_avg" => "elasticsearch_aggregation"
    }
  }
  if ![elasticsearch_aggregation][value] {
    mutate {
      remove_field => ["elasticsearch_aggregation"]
    }
  }
  else {
    ruby {
      code => "event.set('average_byte', event.get('[elasticsearch_aggregation][value]').round(0))"
      remove_field => ["elasticsearch_aggregation"]
    }
  }
}

output {
  stdout {
  }
}
